@page "/tickets"
@using SS_OLA2_FRONTEND.Data
@using System.Text.Json
@using System.Text
@rendermode InteractiveServer

<PageTitle>Testing</PageTitle>


<div>
<EditForm Model=@ticket OnValidSubmit="HandleSubmit">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>

    <label for="FirstName">First Name:</label>
    <InputText id="FirstName" @bind-Value=@ticket.FirstName></InputText>
    <br />

    <label for="LastName">Last Name:</label>
    <InputText id="LastName" @bind-Value=@ticket.LastName></InputText>
    <br />

    <label for="CompanyName">Company Name:</label>
    
    <InputText id="CompanyName" @bind-Value=ticket.CompanyName></InputText>
    <br />

    <label for="KilogramWeight">Weight in KG:</label>
    <InputNumber id="KilogramWeight" @bind-Value=@ticket.KilogramWeight></InputNumber>
    <br />

    <label for="ChemicalType">Chemical type:</label>
    <InputText id="ChemicalType" @bind-Value=@ticket.ChemicalType></InputText>
    <br />

    <button type="submit">Click me!</button>
</EditForm>

</div>
<br />
<br />
<div>
    <p>@responseResultMessage</p>
</div>

@code {
    // This youtube video shows how most of the things work https://www.youtube.com/watch?v=zOqgJJO-XtU 
    string responseResultMessage = "";
    HttpClient httpClient = new()
        {
            BaseAddress = new Uri("https://localhost:7260"),
        };
    Ticket ticket = new();

    // Task return value make Blazor update the responseResultMessage
    public async Task HandleSubmit(EditContext context)
    {
        // create an instance so we can bind the InputText tags to the models attributes
        // remember to cast the context model to your class (Ticket) in this case
        Ticket ticket = (Ticket) context.Model;

        using StringContent jsonContent = new(
        JsonSerializer.Serialize(new
        {
            FirstName = ticket.FirstName,
            LastName = ticket.LastName,
            CompanyName = ticket.CompanyName,
            ChemicalType = ticket.ChemicalType,
            KilogramWeight = ticket.KilogramWeight
        }),
        Encoding.UTF8,
        "application/json");

        using HttpResponseMessage response = await httpClient.PostAsync(
        "ticket",
        jsonContent);

        if(response.IsSuccessStatusCode)
        {
            responseResultMessage = "The ticket has been ACCEPTED";
        }
        if(!response.IsSuccessStatusCode)
        {
            responseResultMessage = "The ticket has been REJECTED";
        }
    }

}
