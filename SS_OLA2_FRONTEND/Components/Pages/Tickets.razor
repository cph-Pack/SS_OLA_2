@page "/tickets"
@using SS_OLA2_FRONTEND.Data
@using System.Text.Json
@using System.Text
@rendermode InteractiveServer

<PageTitle>Testing</PageTitle>


<div>
    <EditForm Model=@ticket OnValidSubmit="HandleSubmit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <label for="DriverFirstName">Driver First Name:</label>
        <InputText id="DriverFirstName" @bind-Value=@ticket.DriverFirstName></InputText>
        <br />

        <label for="DriverLastName">Driver Last Name:</label>
        <InputText id="DriverLastName" @bind-Value=@ticket.DriverLastName></InputText>
        <br />

        <label for="CompanyName">Company Name:</label>

        <InputText id="CompanyName" @bind-Value=ticket.CompanyName></InputText>
        <br />

        <label for="AmountInKilos">Weight in KG:</label>
        <InputNumber id="AmountInKilos" @bind-Value=@ticket.AmountInKilos></InputNumber>
        <br />

        <label for="ChemicalType">Chemical type:</label>
        <InputText id="ChemicalType" @bind-Value=@ticket.ChemicalType></InputText>
        <br />

        <button type="submit">Click me!</button>
    </EditForm>

</div>
<br />
<br />
<div>
    <p>@responseResultMessage</p>
</div>

@code {
    // This youtube video shows how most of the things work https://www.youtube.com/watch?v=zOqgJJO-XtU 
    string responseResultMessage = "";
    HttpClient httpClient = new()
        {
            BaseAddress = new Uri("https://localhost:7260"),
        };
    Ticket ticket = new();

    // Task return value make Blazor update the responseResultMessage
    public async Task HandleSubmit(EditContext context)
    {
        // create an instance so we can bind the InputText tags to the models attributes
        // remember to cast the context model to your class (Ticket) in this case
        Ticket ticket = (Ticket) context.Model;

        using StringContent jsonContent = new(
        JsonSerializer.Serialize(new
        {
            DriverFirstName = ticket.DriverFirstName,
            DriverLastName = ticket.DriverLastName,
            CompanyName = ticket.CompanyName,
            ChemicalType = ticket.ChemicalType,
            AmountInKilos = ticket.AmountInKilos
        }),
        Encoding.UTF8,
        "application/json");

        using HttpResponseMessage response = await httpClient.PostAsync(
        "ticket",
        jsonContent);

        if(response.IsSuccessStatusCode)
        {
            responseResultMessage = "The ticket has been ACCEPTED";
        }
        if(!response.IsSuccessStatusCode)
        {
            responseResultMessage = "The ticket has been REJECTED";
        }
    }

}
